trigger:
  branches:
    include:
    - master
  # paths:
  #   include:
  #     - 'android/*'
  #     - 'ios/*'
stages:
# - stage: Build_APK
#   displayName: Android Build
#   condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'master'), contains(variables['Build.SourceBranch'], 'android/'))
#   jobs:
#   - job: FlutterBuild
  
#     pool:
#       vmImage: ubuntu-latest

#     steps:
#     - task: FlutterInstall@0
#       inputs:
#         mode: 'auto'
#         channel: 'stable'
#         version: 'latest'
#     - task: FlutterBuild@0
#       inputs:
#         target: 'apk'
#         projectDirectory: '.'
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: 'build/app/outputs/flutter-apk'
#         Contents: '**/*.apk'
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'drop-apk'
#         publishLocation: 'Container'
#     - task: ArchiveFiles@2
#       inputs:
#         rootFolderOrFile: '$(Build.BinariesDirectory)'
#         includeRootFolder: true
#         archiveType: 'zip'
#         archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#         replaceExistingArchive: true

# - stage: iOSBuild
#   displayName: 'Build iOS'
#   #condition: and(succeeded(), contains(Variables['Build.SourceBranch'], 'master'))
#   jobs:
#   - job: iOSJob
#     pool:
#       vmImage: 'macos-latest'
#     steps:
#     - task: UseRubyVersion@0
#       inputs:
#         versionSpec: '>= 2.x'
#         addToPath: true
#     - task: InstallAppleCertificate@2
#       inputs:
#         certSecureFile: 'your_certificate_file.p12'
#         certPwd: 'password'
#         keychain: 'temp'
#         deleteCert: true
#     - task: InstallAppleProvisioningProfile@1
#       inputs:
#         provisioningProfileLocation: 'secureFiles'
#         provProfileSecureFile: 'your_provisioning_profile.mobileprovision'
#     - task: FlutterInstall@0
#       inputs:
#         mode: 'auto'
#         channel: 'stable'
#         version: 'latest'
#     - task: FlutterBuild@0
#       inputs:
#         target: 'ios'
#         projectDirectory: '.'
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: 'build/ios/iphoneos'
#         ArtifactName: 'ios-ipa'
#         publishLocation: 'Container'

- stage: Web_Stage
  displayName: Web_Build
  jobs:
    - job: WebJob
      pool:
        vmImage: ubuntu-latest
      steps:
       - task: FlutterInstall@0
         inputs:
          mode: 'auto'
          channel: 'stable'
          version: 'latest'
       - task: FlutterBuild@0
         inputs:
           target: 'web'
           projectDirectory: '.'
       - task: PublishBuildArtifacts@1
         inputs:
           PathtoPublish: 'build/web'
           ArtifactName: 'drop-web'
           publishLocation: 'Container'